Author: Cooper Davies, 2017

Included in this folder are

Haskell Files:
	AST.hs					-The data type definitions for the ast
	ASTConverter.hs			-Converts Tokens parsed by the YACC file into AST types
	Main.hs					-The uncompiled main method

BNFC Files:
	Minisculus.cf			-The grammar for Minisculus in BNFC fashion.

Text Files:
	SumFunction.txt			-Test file for mC
	LexFail.txt				-""
	FailParse.txt 			-""
	FibonacciTest.txt		-""
	FunctionBodyTest.txt	-""
	output.txt				-The output for all the test files

Programs:
	mC						-The compiled front end for Minisculus.
								Can be ran via $./mC <filename>, where
								<filename> is the name of the file you wish to
								generate an AST for
	AllTests.sh				-Script which performs and echos and the tests and
								their results.

HOW TO:
If someone wanted to implement a change to the front end, all they would need to do is run
	$bnfc Minisculus.fc
to generate the corresponding bnfc files. They could then change whichever file they chose so as to implement whatever it is they liked.

The Haskell files given are used to show how the mC program was generated. mC is generated by
	$ghc Main.hs -o <output>
where <output> is the name of the program you would like.

To create and output minisculus files, run
	$./mC <fileName> to generate the AST for <fileName>

You can run all the test by calling
	$./AllTests.sh
This will overwrite the output.txt file which writes all the output of the attempted ASTs.
